generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  email              String  @unique
  username           String?
  password           String
  verification_token String?
  verification_OTP   String?
  isActive           Boolean @default(false)
  isPremium          Boolean @default(false)

  sessions         Session[]
  UserProfile      UserProfile[]
  UserLoginHistory UserLoginHistory[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map("users")
}

model UserLoginHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  loginDate DateTime @default(now())

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expiresAt    DateTime

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model UserProfile {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @unique @db.ObjectId
  firstname String
  lastname  String
  phone     String?
  note      String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Permission {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String           @unique
  description    String
  rolePermission RolePermission[]

  @@map("permissions")
}

model Role {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String           @unique
  description    String
  rolePermission RolePermission[]

  @@map("roles")
}

model RolePermission {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  roleId         String      @db.ObjectId
  permissionName String
  role           Role        @relation(fields: [roleId], references: [id])
  permission     Permission? @relation(fields: [permissionName], references: [name])

  @@map("role_permissions")
}
